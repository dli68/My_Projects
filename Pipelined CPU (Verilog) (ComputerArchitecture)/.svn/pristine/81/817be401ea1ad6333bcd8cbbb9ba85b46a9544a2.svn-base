/* hazard detection and logic control */
module HAZARD_HANDLER(realHlt, flushIF_ID, flushID_EX, flushEX_MEM, flushMEM_WB, stallIF_ID, stallID_EX,
	                  stallEX_MEM, stallMEM_WB,
	                  /*input*/
	                  jrSel, lwStall, mem_re_EX_MEM, LabelSel, hltMEM_WB, hltIF_ID, instr);
	output flushIF_ID, flushID_EX, flushEX_MEM, stallIF_ID, stallID_EX, stallEX_MEM, realHlt, flushMEM_WB, stallMEM_WB;
	input jrSel, lwStall, mem_re_EX_MEM, LabelSel, hltMEM_WB, hltIF_ID;
	input [15:0] instr;

	assign flushIF_ID = (jrSel == 1 || LabelSel == 1 || (instr[15:12] != 4'b1111 && hltIF_ID == 1)) ? 1 : 0;
	assign flushID_EX = (LabelSel == 1) ? 1 : 0;
	assign flushEX_MEM = (LabelSel == 1 || (lwStall == 1 && mem_re_EX_MEM == 1)) ? 1 : 0;

	assign stallIF_ID = (lwStall == 1 && mem_re_EX_MEM == 1) ? 1 : 0;
	assign stallID_EX = (lwStall == 1 && mem_re_EX_MEM == 1) ? 1 : 0;
	assign stallEX_MEM = 0;//(lwStall == 1 && mem_re_EX_MEM == 1) ? 1 : 0;

	assign realHlt = (hltMEM_WB==1) ? 1 : 0;

	assign flushMEM_WB = 0;
	assign stallMEM_WB = 0;
endmodule